name: PostgreSQL

on:
  push:
    branches: ['main']
  pull_request:
    branches: ['main']

jobs:
  build:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:latest
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: testdb
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
        - 5432:5432

    steps:
      - name: Check out repository code
        uses: actions/checkout@v4      

      - name: Wait for PostgreSQL to be ready
        run: until pg_isready -h localhost -p 5432; do sleep 1; done

      - name: Run SQL scripts
        run: |
          psql -h localhost -U postgres -d testdb -f sql/script.sql
        env:
          PGPASSWORD: postgres

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.x'

      - name: Install dependencies
        run: pip install psycopg2

      - name: Run unit tests
        run: python test_db.py
        env:
          GH_USER: ${{ github.actor }}

      - name: Check for differences
        id: check-differences
        run: |
          if ! diff -q data/test_results.csv test_results.csv; then
            echo "CSV files are different."
            echo "DIFFERENT_CSV=true" >> $GITHUB_ENV
          else
            echo "CSV files are the same. Skipping commit."
            echo "DIFFERENT_CSV=false" >> $GITHUB_ENV
          fi

      - name: Overwrite CSV
        if: env.DIFFERENT_CSV == 'true'
        run: |
          cat data/test_results.csv test_results.csv > data/test_results.txt
          mv data/test_results.txt data/test_results.csv

      - name: Commit and Push Changes
        if: env.DIFFERENT_CSV == 'true'
        run: |
          git config --global user.name "GitHub Actions"
          git config --global user.email "actions@github.com"
          
          branch_name="auto-pr-branch"
      
          git checkout -b "$branch_name"
      
          git add data/test_results.csv
      
          git commit -m "Update CSV file"
      
          # Pull the latest changes from the remote branch
          git pull origin main --rebase
      
          # Push the changes to the remote branch
          git push origin "$branch_name"
  
      - name: Create Pull Request
        uses: peter-evans/create-pull-request@v7
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          commit-message: "Automated changes"
          branch: "auto-pr-branch"
          title: "Automated Pull Request"
          body: "This pull request was created automatically by GitHub Actions."

  approve-pull-request:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Approve Pull Request
        uses: juliangruber/approve-pull-request-action@v2
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          number: ${{ steps.create-pull-request.outputs.pull-request-number }}

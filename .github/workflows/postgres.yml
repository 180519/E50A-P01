name: PostgreSQL

on:
  push:
    branches: ['main']
  pull_request:
    branches: ['main']

jobs:
  build:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:latest
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: testdb
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
        - 5432:5432

    steps:
      - name: Check out repository code
        uses: actions/checkout@v4

       
      - name: Restore instructions file
        run: |
          # Specify the branch or commit to restore the file from
          branch_or_commit="main"
          file_to_restore="sql/script.sql"

          # Fetch the branch or commit
          git fetch origin $branch_or_commit

          # Restore the specific file
          git checkout origin/$branch_or_commit -- $file_to_restore

          # Commit the restored file
          git config --global user.name "GitHub Actions"
          git config --global user.email "actions@github.com"
          git add $file_to_restore
          git commit -m "Restore $file_to_restore from $branch_or_commit"
          git push origin HEAD:main        

      - name: Wait for PostgreSQL to be ready
        run: until pg_isready -h localhost -p 5432; do sleep 1; done

      - name: Run SQL scripts
        run: |
          psql -h localhost -U postgres -d testdb -f sql/script.sql
        env:
          PGPASSWORD: postgres

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.x'

      - name: Install dependencies
        run: pip install psycopg2

      - name: Run unit tests
        run: python test_db.py
        env:
          GH_USER: ${{ github.actor }}

      - name: Check for differences
        id: check-differences
        run: |
          if ! diff -q data/test_results.csv test_results.csv; then
            echo "CSV files are different."
            echo "DIFFERENT_CSV=true" >> $GITHUB_ENV
          else
            echo "CSV files are the same. Skipping commit."
            echo "DIFFERENT_CSV=false" >> $GITHUB_ENV
          fi

      - name: Overwrite CSV
        if: env.DIFFERENT_CSV
        run: |
          cat data/test_results.csv test_results.csv > data/test_results.txt
          mv data/test_results.txt data/test_results.csv

      - name: Commit and Push Changes
        if: env.DIFFERENT_CSV == 'true'
        run: |
          git config --global user.name "GitHub Actions"
          git config --global user.email "actions@github.com"
          
          timestamp=$(date +'%Y%m%d%H%M%S')
          branch_name="update-csv-$timestamp"

          git checkout -b "$branch_name"

          git add data/test_results.csv

          git commit -m "Update CSV file"

          git push origin "$branch_name"
          
          git checkout main
          git merge --no-ff --allow-unrelated-histories "$branch_name"
          git push origin main

          # delete the temporary branch
          git branch -d "$branch_name"
          git push origin --delete "$branch_name"
          

      - name: Upload test results
        uses: actions/upload-artifact@v4
        with:
          name: test-results
          path: test_results.csv
